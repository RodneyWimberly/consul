###########################################################################################################
# Service Registry Stack
# HA Service discovery, health checks, load-balancing,
# DNS name lookup, routing intentions, KV store,
# DNS Server, Secret Store/Vault
###########################################################################################################
version: "3.8"

volumes:
  data_volume:

networks:
  admin_network:
    external: true

configs:
  common_config:
    file: ./config/common.json
  client_config:
    file: ./config/client.json
  server_config:
    file: ./config/server.json

secrets:
  ca_file:
    file: ./certs/ca.crt
  cert_file:
    file: ./certs/cert.crt
  key_file:
    file: ./certs/tls.key

services:
  consul:
    image: consul:${CONSUL_VERSION:-latest}
    entrypoint: /usr/local/scripts/consul-entrypoint.sh
    command: agent
    configs:
      - source: common_config
        target: /consul/data/bootstrap/common.json
      - source: client_config
        target: /consul/data/bootstrap/client.json
      - source: server_config
        target: /consul/data/bootstrap/server.json
    secrets:
      - source: ca_file
        target: /consul/data/certs/ca.crt
      - source: cert_file
        target: /consul/data/certs/cert.crt
      - source: key_file
        target: /consul/data/certs/tls.key
    volumes:
      - data_volume:/consul/data
      - /var/run/docker.sock:/var/run/docker.sock
      - ./scripts:/usr/local/scripts
    ports:
      - target: 8500
        published: 8500
        mode: host
    networks:
      admin_network:
        aliases:
          - consul.service.consul
    env_file:
      - ./scripts/consul.env
    #healthcheck:
      #test: ['CMD', '/bin/sh', '-c', 'curl -sfLo /dev/null http://127.0.0.1:8500/v1/health/node/$$HOSTNAME']
    deploy:
      endpoint_mode: dnsrr
      mode: global

  registrator:
    image: gliderlabs/registrator:master
    command: -internal consul://consul.service.consul:8500
    env_file:
      - ./scripts/consul.env
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    networks:
      admin_network: {}
    deploy:
      mode: global

    storage:
      image: filebrowser/filebrowser
      entrypoint: /usr/local/scripts/filebrowser-entrypoint.sh
      ports:
      - 8800:80
      networks:
        admin_network: {}
      env_file:
        - ./scripts/consul.env
      volumes:
      - ./volumes:/usr/local/volumes
      - ./scripts:/usr/local/scripts
      deploy:
        replicas: 1
