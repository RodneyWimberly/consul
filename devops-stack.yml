#####################################################
# DevOps Stack - Used to manage dev-ops stuff like Docker
#####################################################
# External Ports
# 3128:ingress/tcp      = http-proxy - HTTP/HTTPS/FTP Proxy Server
# 1080:ingress/tcp:udp  = socks-proxy - SOCKS4/SOCKS5 Proxy Server
# 9000:ingress/tcp      = web - HTTP UI
# 9001:host/tcp:udp     = agent - HTTP REST

version: '3.8'

services:
  web:
    image: portainer/portainer
    volumes:
      - web_volume:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - 9000:9000
    networks:
     - admin_network
    deploy:
      placement:
        constraints: [node.platform.os == linux]

  agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - target: 9001
        published: 9001
        protocol: tcp
        mode: host
    networks:
     - admin_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  socks-proxy:
    image: wernight/dante
    ports:
      - 1080:1080
    networks:
     - admin_network
    deploy:
      replicas: 1

  http-proxy:
    image: sameersbn/squid:3.5.27-2
    ports:
      - 3128:3128
    networks:
     - admin_network
    volumes:
      - /srv/docker/squid/cache:/var/spool/squid
    deploy:
      replicas: 1

volumes:
  web_volume:
