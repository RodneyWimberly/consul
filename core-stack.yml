###########################################################################################################
# Service Registry Stack
# HA Service discovery, health checks, load-balancing,
# DNS name lookup, routing intentions, KV store,
# DNS Server, Secret Store/Vault
###########################################################################################################
version: "3.8"

volumes:
  consul_data:

networks:
  admin_network:
    external: true

configs:
  consul_common:
    file: /mnt/config/common.json
  consul_client:
    file: /mnt/config/client.json
  consul_server:
    file: /mnt/config/server.json
  consul_bootstrap:
    file: /mnt/backups/bootstrap.json
  dns:
    file: /mnt/config/dnsmasq.conf

secrets:
  consul_ca:
    file: /mnt/certs/consul-agent-ca.pem
  consul_server_cert:
    file: /mnt/certs/docker-server-consul-0.pem
  consul_server_key:
    file: /mnt/certs/docker-server-consul-0-key.pem
  consul_client_cert:
    file: /mnt/certs/docker-client-consul-0.pem
  consul_client_key:
    file: /mnt/certs/docker-client-consul-0-key.pem
  consul_bootstrap_snap:
    file: /mnt/backups/bootstrap.snap

services:
  consul:
    image: consul:${CONSUL_VERSION:-latest}
    entrypoint: /usr/local/scripts/consul-entrypoint.sh
    command: agent
    configs:
      - source: consul_common
        target: /consul/data/bootstrap/common.json
      - source: consul_client
        target: /consul/data/bootstrap/client.json
      - source: consul_server
        target: /consul/data/bootstrap/server.json
      - source: consul_bootstrap
        target: /consul/data/bootstrap/bootstrap.json
    secrets:
      - source: consul_ca
        target: /consul/data/certs/consul-agent-ca.pem
      - source: consul_server_cert
        target: /consul/data/certs/docker-server-consul-0.pem
      - source: consul_server_key
        target: /consul/data/certs/docker-server-consul-0-key.pem
      - source: consul_client_cert
        target: /consul/data/certs/docker-client-consul-0.pem
      - source: consul_client_key
        target: /consul/data/certs/docker-client-consul-0-key.pem
      - source: consul_bootstrap_snap
        target: /consul/data/bootstrap/bootstrap.snap
    volumes:
      - consul_data:/consul/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/scripts:/usr/local/scripts:rw
      - /mnt/backups:/consul/backups:rw
    env_file:
      - /mnt/scripts/core.env
    networks:
        admin_network:
          aliases:
            - consul.service.consul
    #healthcheck:
     # test: ['CMD', '/bin/sh', '-c', 'curl --header "X-Consul-Token: $$CONSUL_HTTP_TOKEN" -sfLo /dev/null http://127.0.0.1:8500/v1/health/node/$$HOSTNAME']
    deploy:
      endpoint_mode: dnsrr
      mode: global

  dns:
    image: storytel/dnsmasq
    init: true
    command: /usr/local/scripts/dns-entrypoint.sh
    configs:
      - source: dns
        target: /etc/dnsmasq.template
    env_file:
      - /mnt/scripts/core.env
    volumes:
      - /mnt/scripts:/usr/local/scripts:rw
    cap_add:
      - NET_ADMIN
    networks:
      admin_network:
        aliases:
          - dns.service.consul
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 1s
        order: stop-first

  registrator:
    image: gliderlabs/registrator:master
    depends_on:
       - consul
    command: -cleanup -internal consul://consul.service.consul:8500
    env_file:
      - /mnt/scripts/core.env
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    networks:
      - admin_network
    deploy:
      mode: global
    dns:
      - dns.service.consul
